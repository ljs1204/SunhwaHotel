<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="co.kr.hotel.dao.ReserveDAO">


	<select id="toReservelist" resultType="co.kr.hotel.dto.RoomDTO">
			
	select distinct r.room_type,r.bed_type , r.room_price, r.room_type_name,p.room_img 
	FROM room r inner join photo p ON r.room_num = p.room_num 
	WHERE r.room_num not in 
	(select room_num from reserve 
	WHERE checkindate  BETWEEN #{param1} AND #{param2} OR
	checkoutdate  BETWEEN #{param1} AND #{param2} OR
	(checkindate  &lt;= #{param1} AND checkoutdate  &gt;= #{param2}) and reserve_state = 1)
	union
	select distinct r.room_type,r.bed_type , r.room_price, r.room_type_name,p.room_img 
	from
	(
		select *
		from reserve 
		WHERE checkindate  BETWEEN #{param1} AND #{param2} OR
	checkoutdate  BETWEEN #{param1} AND #{param2} OR
	(checkindate  &lt;= #{param1} AND checkoutdate &gt;= #{param2}) 
	) as r1 inner join room r on r.room_num = r1.room_num  inner join photo p ON r.room_num = p.room_num 
	where reserve_state not in (1) 
	order by room_type;
			
		
	</select>

	<select id="nulroom" resultType="co.kr.hotel.dto.RoomDTO"> 
	select distinct r.room_type,bed_type 
	FROM room r 
	WHERE r.room_num not in 
	(select room_num from reserve 
	WHERE checkindate  BETWEEN #{param1} AND #{param2} OR
			checkoutdate  BETWEEN #{param1} AND #{param2} OR
			(checkindate  &gt;= #{param1} AND checkoutdate  &lt;= #{param2}) and reserve_state = 1)
	union all
	select r.room_type,bed_type 
	from
	(
		select *
		from reserve 
		WHERE checkindate  BETWEEN #{param1} AND #{param2} OR
			checkoutdate  BETWEEN #{param1} AND #{param2} OR
			(checkindate &gt;= #{param1} AND checkoutdate  &lt;= #{param2})
	) as r1 inner join room r on r.room_num = r1.room_num
	where reserve_state not in (1) 
	order by room_type
	</select>

	
	<select id="reservation_option" resultType="hashmap">
		SELECT * FROM room_option
	</select>
	
	<select id="reservation_product" resultType="hashmap">
		SELECT * FROM product
	</select>
	
	<select id="useable" resultType="int">
		SELECT m.mileage_useable FROM mileage m WHERE mem_id = #{param1} order by mileage_date desc limit 1;
	</select>

	 
	 <insert id="roomOne" 
	 	useGeneratedKeys="true"
	 	keyProperty="reserve_idx"
	 	keyColumn="reserve_idx"
	 	parameterType="co.kr.hotel.dto.ReserveDTO">
	 		
		insert into reserve (mem_id,reserve_num,room_num,reserve_state,checkindate,checkoutdate,adult_cnt,extrabed_cnt,breakfast_cnt,add_requests)
		values(#{mem_id},#{reserve_num},#{room_num},#{reserve_state},#{checkindate},#{checkoutdate},#{adult_cnt},#{extrabed_cnt},#{breakfast_cnt},#{add_requests})
	 	
	 </insert>
	 
	 <insert id="roomOneCart">
	 	INSERT INTO cart(reserve_idx,product_cnt,product_num)VALUES(#{param1},#{param2},#{param3})
	 </insert>
	 
	 <insert id="buyMileageminus">
	 INSERT INTO mileage(mem_id,mileage_price,mileage_useable)VALUES(#{param1},#{param2},#{param3})
	 </insert>           
	 
	 <select id="product_price" resultType="int">
		select p.product_price from product p where product_num = #{param1}
	</select>
	
	<select id="reservation_memInfo" resultType="co.kr.hotel.dto.MemberDTO">
		select mem_id,AES_DECRYPT(UNHEX(credit_num), SHA2('a-key',512))as credit_num,mem_grade,mem_name_kr,mem_name_en,mem_phone,mem_email,credit_num,credit_validity,credit_type           
		from member
		where mem_id = #{param1} 
	</select>
	
	
	<select id="roomIdx" resultType="String">
			
		SELECT r.room_num 
		FROM room r 
		WHERE r.room_num not in 
		(select room_num from reserve 
		WHERE checkindate  BETWEEN #{checkindate} AND #{checkoutdate} OR
		checkoutdate  BETWEEN #{checkindate} AND #{checkoutdate} OR
		(checkindate  &gt; #{checkindate} AND checkoutdate  &lt; #{checkoutdate})and reserve_state = 1) and r.room_type = #{room_type} and r.bed_type = #{bed_type} 
		union all
		select r.room_num
		from
		(
			select *
			from reserve 
			WHERE checkindate  BETWEEN #{checkindate} AND #{checkoutdate} OR
			checkoutdate  BETWEEN #{checkindate} AND #{checkoutdate} OR
			(checkindate  &gt; #{checkindate} AND checkoutdate  &lt; #{checkoutdate})
		) as r1 inner join room r on r.room_num = r1.room_num
		where reserve_state not in (1) 
		order by room_num limit 1

	          
	</select>
	
	<select id="rate"  resultType="int">
		select save_rate from grade_type where mem_grade = (select mem_grade from member where mem_id = #{param1})
	</select>
	
	 <insert id="mileageSave">
	 	INSERT INTO mileage(mem_id,mileage_price,mileage_useable) VALUES(#{param1},#{param2},#{param3});
	 </insert>
	 
	<select id="mem_card"  resultType="String">
		select bank from credit_type where credit_idx = #{param1}
	</select>
	
	<select id="extrabed_price"  resultType="Int">
		select option_price from room_option where option_num = '1'
	</select>
	
	<select id="breakfast_price"  resultType="Int">
		select option_price from room_option where option_num = '2'
	</select>
	
	<select id="room_price"  resultType="Int">
		select room_price from room where room_num = (select room_num from reserve where reserve_idx = #{param1})
	</select>
	
	<insert id="roomPay">
	 	INSERT INTO pay (reserve_idx,pay_num,credit_num,credit_validity,credit_type,pay_price,pay_mileage,amount)
        	VALUES (#{param1},#{param2},HEX(AES_ENCRYPT(#{param3}, SHA2('a-key',512))),#{param4},#{param5},#{param6},#{param7},#{param8})
	</insert>

	<insert id="cardSave" parameterType="hashmap">
		update member set credit_num=HEX(AES_ENCRYPT(#{c_num}, SHA2('a-key',512))),credit_validity=#{c_valid},credit_type=#{c_type} where mem_id = #{loginId}
	</insert>
	
	<insert id="nonMem">
		insert into nonmember values(#{param1},#{param2},#{param3},#{param4},#{param5},#{param6})
	</insert>
	
<!-- 20220325 환불! -->
	<!-- 예약T - 부분 취소일 때 -->	
	<insert id="refundParts">
		insert 
		into reserve(mem_id, reserve_num, room_num, reserve_state, checkindate, checkoutdate, adult_cnt, extrabed_cnt, breakfast_cnt, add_requests)
		select mem_id , reserve_num , room_num , (CASE reserve_state WHEN 1 THEN 2 end) as reserve_state, checkindate , checkoutdate , adult_cnt , extrabed_cnt , breakfast_cnt, add_requests 
		from reserve r 
		where mem_id = #{param4} and reserve_idx in (#{param1}, #{param2}, #{param3})
	</insert>
	
	<!-- 예약T - 완전 취소일 때 -->
	<insert id="refundAll">
		insert 
		into reserve(mem_id, reserve_num, room_num, reserve_state, checkindate, checkoutdate, adult_cnt, extrabed_cnt, breakfast_cnt, add_requests)
		select mem_id , reserve_num , room_num , (CASE reserve_state WHEN 1 THEN 3 end) as reserve_state, checkindate , checkoutdate , adult_cnt , extrabed_cnt , breakfast_cnt, add_requests 
		from reserve r 
		where mem_id = #{param4} and reserve_idx in (#{param1}, #{param2}, #{param3})
	</insert>
	
	<!-- 예약에 대한 가격 불러오기 -->
	<select id="priceAll" resultType="co.kr.hotel.dto.ReserveDTO">
		select *
		from reserve r
		inner join pay p 
		on r.reserve_idx = p.reserve_idx 
		where r.reserve_idx in (#{param1}, #{param2}, #{param3})
	</select>
	
	
	
	<!-- 결제T - 부분 취소일 때 -->
	<insert id="refundPayParts" parameterType="java.util.ArrayList">
		insert 
		into pay(reserve_idx, pay_num, credit_num, pay_state, credit_validity, credit_type, pay_price , pay_mileage , amount) 
		VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.reserve_idx}, #{item.pay_num}, #{item.credit_num}, (CASE #{item.pay_state} WHEN 1 THEN 2 end), #{item.credit_validity}, 
            #{item.credit_type}, #{item.pay_price}, #{item.pay_mileage}, #{item.amount}
            ) 
        </foreach>
	</insert>
	
	<!-- 결제T - 완전 취소일 때  -->
	<insert id="refundPayAll" parameterType="java.util.ArrayList">
		insert 
		into pay(reserve_idx, pay_num, credit_num, pay_state, credit_validity, credit_type, pay_price , pay_mileage , amount) 
		VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.reserve_idx}, #{item.pay_num}, #{item.credit_num}, (CASE #{item.pay_state} WHEN 1 THEN 3 end), #{item.credit_validity}, 
            #{item.credit_type}, #{item.pay_price}, #{item.pay_mileage}, #{item.amount}
            ) 
        </foreach>
	</insert>
	
	<insert id="refundCart">
		insert 
		into cart (product_num, reserve_idx, product_cnt)
		select product_num, reserve_idx, product_cnt*(-1)  
		from cart c 
		where reserve_idx in (#{param1}, #{param2}, #{param3}) 
	</insert>
	
	<select id="memberGradeAll" resultType="String">
		SELECT mem_grade
		FROM member
		WHERE mem_id = #{param1}
	</select>
	
	<insert id="mileageDeduction">
		insert into mileage(mem_id, mileage_price, mileage_useable)
		select mem_id, #{param1} as mileage_price, (mileage_useable+(#{param1}))
		from mileage 
		where mem_id=#{param2} order by mileage_date desc limit 1;
	</insert>
	
	
</mapper>







